{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet id = 1;\nexport const habitSlice = createSlice({\n  name: \"habits\",\n  initialState: [],\n  reducers: {\n    addHabit: (state, action) => {\n      const today = new Date();\n      let day = today.getDate() - today.getDay();\n      const month = today.getMonth();\n      const year = today.getFullYear();\n      const habit = {\n        id: id++,\n        name: action.payload,\n        weekLog: [{\n          id: 0,\n          day: \"Sunday\",\n          dd: day,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }, {\n          id: 1,\n          day: \"Monday\",\n          dd: day + 1,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }, {\n          id: 2,\n          day: \"Tuesday\",\n          dd: day + 2,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }, {\n          id: 3,\n          day: \"Wednesday\",\n          dd: day + 3,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }, {\n          id: 4,\n          day: \"Thursday\",\n          dd: day + 4,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }, {\n          id: 5,\n          day: \"Friday\",\n          dd: day + 5,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }, {\n          id: 6,\n          day: \"Saturday\",\n          dd: day + 6,\n          mm: month,\n          yyyy: year,\n          isDone: \"\"\n        }]\n      };\n      const tempHabits = [...state, habit];\n      return tempHabits;\n    },\n    deleteHabit: (state, action) => {\n      const tempHabits = state.filter(habit => habit.id !== action.payload);\n      return tempHabits;\n    },\n    habitDone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone = true;\n        }\n      }\n      return tempHabits;\n    },\n    habitUnDone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone = false;\n        }\n      }\n      return tempHabits;\n    },\n    habitNone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone = \"\";\n        }\n      }\n      return tempHabits;\n    },\n    updateHabitName: (state, action) => {\n      return action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addHabit,\n  deleteHabit,\n  habitDone,\n  habitUnDone,\n  habitNone\n} = habitSlice.actions;\nexport default habitSlice.reducer;","map":{"version":3,"names":["createSlice","id","habitSlice","name","initialState","reducers","addHabit","state","action","today","Date","day","getDate","getDay","month","getMonth","year","getFullYear","habit","payload","weekLog","dd","mm","yyyy","isDone","tempHabits","deleteHabit","filter","habitDone","i","length","Number","localStorage","getItem","habitUnDone","habitNone","updateHabitName","actions","reducer"],"sources":["C:/react/React Projects/habitmate/src/redux/features/habitSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nlet id = 1;\n\nexport const habitSlice = createSlice({\n  name: \"habits\",\n  initialState: [],\n  reducers: {\n    addHabit: (state, action) => {\n      const today = new Date();\n      let day = today.getDate() - today.getDay();\n      const month = today.getMonth();\n      const year = today.getFullYear();\n\n      const habit = {\n        id: id++,\n        name: action.payload,\n        weekLog: [\n          {\n            id: 0,\n            day: \"Sunday\",\n            dd: day,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n          {\n            id: 1,\n            day: \"Monday\",\n            dd: day + 1,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n          {\n            id: 2,\n            day: \"Tuesday\",\n            dd: day + 2,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n          {\n            id: 3,\n            day: \"Wednesday\",\n            dd: day + 3,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n          {\n            id: 4,\n            day: \"Thursday\",\n            dd: day + 4,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n          {\n            id: 5,\n            day: \"Friday\",\n            dd: day + 5,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n          {\n            id: 6,\n            day: \"Saturday\",\n            dd: day + 6,\n            mm: month,\n            yyyy: year,\n            isDone: \"\",\n          },\n        ],\n      };\n      const tempHabits = [...state, habit];\n      return tempHabits;\n    },\n\n    deleteHabit: (state, action) => {\n      const tempHabits = state.filter((habit) => habit.id !== action.payload);\n      return tempHabits;\n    },\n    habitDone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone = true;\n        }\n      }\n      return tempHabits;\n    },\n    habitUnDone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone = false;\n        }\n      }\n      return tempHabits;\n    },\n    habitNone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone = \"\";\n        }\n      }\n      return tempHabits;\n    },\n     updateHabitName: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addHabit, deleteHabit, habitDone, habitUnDone, habitNone } =\n  habitSlice.actions;\n\nexport default habitSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}